pipeline {
    agent any

    tools {
        jdk 'jdk-21'
    }

    environment {
        APP_NAME = 'motorcycle-maintenance-api'
        DOCKER_IMAGE = "motorcycle-maintenance-api:latest"
        JAR_NAME = 'motorcycle-maintenance-api.jar'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build with Maven') {
            steps {
                sh './mvnw clean package -DskipTests'
            }
        }

        stage('List Files') {
            steps {
                script {
                    def files = sh(script: "ls -l", returnStdout: true).trim() // Lists all files in the current directory, including details.
                    echo "Files:\n${files}"
                }
            }
        }

        stage('List Current Directory') {
            steps {
                script {
                    def dir = sh(script: "pwd", returnStdout: true).trim() // List current directory
                    echo "Curr dir:\n${dir}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "sudo docker build -f Dockerfile -t $DOCKER_IMAGE ."
                }
            }
        }

        stage('Stop and Remove Old Container') {
            steps {
                sh """
                sudo docker stop $APP_NAME || true
                sudo docker rm $APP_NAME || true
                """
            }
        }

        stage('Run New Container') {
            steps {
                sh """
                sudo docker run -d \
                    --name $APP_NAME \
                    -p 8081:8081 \
                    --network=host \
                    $DOCKER_IMAGE
                """
            }
        }
    }

    post {
        success {
            echo '✅ Deploy realizado com sucesso.'
        }
        failure {
            echo '❌ Algo deu errado no deploy.'
        }
    }
}
